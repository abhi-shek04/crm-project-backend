{
  "openapi": "3.0.0",
  "info": {
    "title": "CRM API Documentation",
    "version": "1.0.0",
    "description": "API documentation for the CRM system",
    "contact": {
      "name": "API Support",
      "email": "support@crm.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/ai/segment-rule": {
      "post": {
        "summary": "Parse a natural language segment rule prompt into a logical rule object",
        "tags": [
          "AI"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prompt": {
                    "type": "string",
                    "example": "People who haven't shopped in 6 months and spent over 10K"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Parsed rule object"
          },
          "400": {
            "description": "Prompt is required"
          },
          "500": {
            "description": "AI parsing error"
          }
        }
      }
    },
    "/api/campaigns": {
      "post": {
        "summary": "Create a new campaign",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Campaign created"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get all campaigns for the logged-in user",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of campaigns"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/campaigns/{id}": {
      "get": {
        "summary": "Get a campaign by ID",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign found"
          },
          "404": {
            "description": "Campaign not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a campaign by ID",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Campaign"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Campaign updated"
          },
          "404": {
            "description": "Campaign not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a campaign by ID",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign deleted"
          },
          "404": {
            "description": "Campaign not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/campaigns/{id}/deliver": {
      "post": {
        "summary": "Deliver a campaign to its audience",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign delivered"
          },
          "404": {
            "description": "Campaign not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/campaigns/{id}/stats": {
      "get": {
        "summary": "Get campaign stats and logs",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign stats and logs"
          },
          "404": {
            "description": "Campaign not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/campaigns/analytics": {
      "get": {
        "summary": "Get campaign analytics for the logged-in user",
        "tags": [
          "Campaigns"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Campaign analytics"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/customers": {
      "post": {
        "summary": "Create a new customer",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customer created"
          },
          "400": {
            "description": "Customer with this email already exists"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get all customers",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of customers"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/customers/{id}": {
      "get": {
        "summary": "Get a customer by ID",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer found"
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a customer by ID",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Customer updated"
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a customer by ID",
        "tags": [
          "Customers"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer deleted"
          },
          "404": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/orders": {
      "post": {
        "summary": "Create a new order",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created"
          },
          "400": {
            "description": "Customer not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "get": {
        "summary": "Get all orders",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of orders"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "summary": "Get an order by ID",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order found"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update an order by ID",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order updated"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete an order by ID",
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order deleted"
          },
          "404": {
            "description": "Order not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "Get user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          }
        }
      },
      "put": {
        "summary": "Update user profile",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "company": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/avatar": {
      "post": {
        "summary": "Upload user avatar",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "avatar": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/password": {
      "put": {
        "summary": "Change user password",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/preferences": {
      "get": {
        "summary": "Get user preferences",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update user preferences",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "theme": {
                    "type": "string"
                  },
                  "notifications": {
                    "type": "object"
                  },
                  "language": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/notifications": {
      "get": {
        "summary": "Get user notifications",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Mark all notifications as read",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/notifications/{id}": {
      "put": {
        "summary": "Mark notification as read",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    }
  },
  "tags": [
    {
      "name": "Campaigns",
      "description": "Campaign management"
    },
    {
      "name": "Customers",
      "description": "Customer management"
    },
    {
      "name": "Orders",
      "description": "Order management"
    }
  ]
}